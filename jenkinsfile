pipeline {
    agent any

    

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/3brazik/jenkins_nodejs_example.git'

            }
        }
        stage('ci') {
            steps {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){

                    sh "docker login -u ${USERNAME} -p ${PASSWORD}"
                    sh "docker build . -f dockerfile -t 3brazik/jenkins"


                }
            }    


        }    

        stage('cd') {
            steps {
              
              sh "docker run -d -p 3000:3000 3brazik/jenkins"
            
            }
        }
    }
    post {
        // If deployment was successful, send a green notification to slack
        success {
            slackSend(channel: 'jenkins', color: 'good', message: "Deployed Successfully - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        // If deployment fails, send a red notification
        failure {
            slackSend(channel: 'jenkins', color: 'danger', message: "Build Failed  - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        // trigger every-works
        always {
            slackSend message: 'New Build'
        }
}

#ec2_slave
// pipeline {
//     agent {label 'ec2'}

    

//     stages {
//         stage('Build') {
//             steps {
//                 // Get some code from a GitHub repository
//                 git 'https://github.com/3brazik/jenkins_nodejs_example.git'

//             }
//         }
//         stage('ci') {
//             steps {
//                     withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){

//                     sh "docker login -u ${USERNAME} -p ${PASSWORD}"
//                     sh "docker build . -f dockerfile -t 3brazik/jenkins"


//                 }
//             }    


//         }    

//         stage('cd') {
//             steps {
              
//               sh "docker run -d -p 3000:3000 3brazik/jenkins"
            
//             }
//         }
//     }
// }
